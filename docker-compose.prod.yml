version: '3.9'

services:
  login-api:
    build:
      context: ./Backend/Login API
      dockerfile: dockerfile.prodLoginAPI  # Production-specific Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - app-network
    restart: always

  wordle-api:
    build:
      context: ./Backend/Wordle API
      dockerfile: dockerfile.prodWordAPI  # Production-specific Dockerfile
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DB=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  frontend:
    build:
      context: ./frontend/wordle-frontend
      dockerfile: dockerfile.prodFront  # Production-specific Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://login-api:5000
      - NEXT_PUBLIC_WORDLE_API_URL=http://wordle-api:5001
    networks:
      - app-network
    restart: always

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3307:3306"  # Expose database for external access (optional)
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    networks:
      - app-network

  adminer:
    image: adminer
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
